# Generated by Django 5.1.5 on 2025-05-03 09:07

import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChronicIllness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the chronic illness', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Chronic Illness',
                'verbose_name_plural': 'Chronic Illnesses',
            },
        ),
        migrations.CreateModel(
            name='Disability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the disability', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description', null=True)),
            ],
            options={
                'verbose_name': 'Disability',
                'verbose_name_plural': 'Disabilities',
            },
        ),
        migrations.CreateModel(
            name='EconomicSituation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_orphan', models.BooleanField(default=False)),
                ('father_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('parents_marital_status', models.CharField(blank=True, choices=[('Married', 'Married'), ('Divorced', 'Divorced'), ('Separated', 'Separated'), ('Widowed', 'Widowed'), ('Single', 'Single')], help_text="Marital status of the student's parents", max_length=100, null=True)),
                ('family_income_level', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('income_source', models.CharField(choices=[('Salary', 'Salary'), ('Business', 'Business'), ('Aid', 'Aid'), ('Other', 'Other')], default='Other', max_length=100)),
                ('monthly_expenses', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('housing_status', models.CharField(blank=True, choices=[('Owned', 'Owned'), ('Rented', 'Rented'), ('Shared', 'Shared'), ('Temporary Shelter', 'Temporary Shelter'), ('None', 'None')], max_length=100, null=True)),
                ('access_to_electricity', models.BooleanField(default=True)),
                ('has_access_to_water', models.BooleanField(default=True)),
                ('access_to_internet', models.BooleanField(default=False)),
                ('has_private_study_room', models.BooleanField(default=False)),
                ('number_of_rooms_in_home', models.PositiveIntegerField(blank=True, null=True)),
                ('daily_food_availability', models.BooleanField(default=True)),
                ('has_school_uniform', models.BooleanField(default=True)),
                ('has_stationery', models.BooleanField(default=True)),
                ('receives_scholarship', models.BooleanField(default=False)),
                ('receives_private_tutoring', models.BooleanField(default=False)),
                ('daily_study_hours', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(24.0)])),
                ('works_after_school', models.BooleanField(default=False)),
                ('work_hours_per_week', models.FloatField(blank=True, null=True)),
                ('responsible_for_household_tasks', models.BooleanField(default=False)),
                ('transportation_mode', models.CharField(blank=True, choices=[('Walking', 'Walking'), ('Bicycle', 'Bicycle'), ('Public Transport', 'Public Transport'), ('Private Car', 'Private Car'), ('School Bus', 'School Bus'), ('Motorbike', 'Motorbike'), ('None', 'None')], max_length=100, null=True)),
                ('distance_to_school', models.FloatField(blank=True, null=True)),
                ('has_health_insurance', models.BooleanField(default=False)),
                ('household_size', models.PositiveIntegerField(default=1)),
                ('sibling_rank', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Economic Situation',
                'verbose_name_plural': 'Economic Situations',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_score', models.DecimalField(decimal_places=2, default=Decimal('100.00'), max_digits=5)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('grade_level', models.CharField(blank=True, help_text='Grade (A, B, C, D, F)', max_length=100)),
                ('exam_type', models.CharField(choices=[('Midterm', 'Midterm Exam'), ('Final', 'Final Exam'), ('Quiz', 'Quiz'), ('Assignment', 'Assignment'), ('Other', 'Other')], default='Final', max_length=100)),
                ('semester', models.CharField(choices=[('Fall', 'Fall Semester'), ('Spring', 'Spring Semester'), ('Summer', 'Summer Semester')], default='Fall', max_length=100)),
                ('date_recorded', models.DateField(auto_now_add=True)),
                ('weight', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=4)),
                ('gpa_points', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
            ],
            options={
                'verbose_name': 'Grade',
                'verbose_name_plural': 'Grades',
                'ordering': ['-date_recorded'],
            },
        ),
        migrations.CreateModel(
            name='GradeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('new_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('reason_for_update', models.CharField(blank=True, help_text='Reason for grade update', max_length=200, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='HealthInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_chronic_illness', models.BooleanField(default=False)),
                ('general_health_status', models.CharField(choices=[('good', 'Good'), ('needs follow up', 'Needs Follow Up')], default='good', max_length=100)),
                ('last_medical_checkup', models.DateField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('academic_stress', models.CharField(choices=[('Low', 'Low'), ('Moderate', 'Moderate'), ('High', 'High')], default='Moderate', max_length=100)),
                ('motivation', models.CharField(choices=[('Low', 'Low'), ('Moderate', 'Moderate'), ('High', 'High')], default='Moderate', max_length=100)),
                ('depression', models.BooleanField(default=False)),
                ('sleep_disorder', models.CharField(choices=[('None', 'None'), ('Low', 'Low'), ('Moderate', 'Moderate'), ('High', 'High')], default='None', max_length=100)),
                ('study_life_balance', models.CharField(choices=[('Needs Improvement', 'Needs Improvement'), ('Moderate', 'Moderate'), ('Good', 'Good')], default='Needs Improvement', max_length=100)),
                ('family_pressures', models.CharField(choices=[('None', 'None'), ('Low', 'Low'), ('Moderate', 'Moderate'), ('High', 'High')], default='None', max_length=100)),
            ],
            options={
                'verbose_name': 'Health Information',
                'verbose_name_plural': 'Health Information',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaAndTechnology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_electronic_device', models.BooleanField(default=False, help_text='Does the student own an electronic device?')),
                ('device_usage_purpose', models.CharField(choices=[('Education', 'Education'), ('Entertainment', 'Entertainment'), ('Gaming', 'Gaming'), ('Work', 'Work'), ('Other', 'Other')], default='Other', help_text='Primary purpose of device usage', max_length=100)),
                ('has_social_media_accounts', models.BooleanField(default=False, help_text='Does the student have social media accounts?')),
                ('daily_screen_time', models.FloatField(default=0.0, help_text='Daily screen time in hours')),
                ('social_media_impact_on_studies', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Neutral', 'Neutral'), ('None', 'None')], default='None', help_text='Impact of social media on studies', max_length=100)),
                ('content_type_watched', models.CharField(choices=[('Educational', 'Educational'), ('Entertainment', 'Entertainment'), ('Gaming', 'Gaming'), ('News', 'News'), ('Sports', 'Sports'), ('Other', 'Other')], default='Other', help_text='Type of content watched', max_length=100)),
                ('social_media_impact_on_sleep', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Neutral', 'Neutral'), ('None', 'None')], default='None', help_text='Impact on sleep', max_length=100)),
                ('social_media_impact_on_focus', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Neutral', 'Neutral'), ('None', 'None')], default='Neutral', help_text='Impact on focus', max_length=100)),
                ('plays_video_games', models.BooleanField(default=False, help_text='Does the student play video games?')),
                ('daily_gaming_hours', models.FloatField(default=0.0, help_text='Daily gaming hours')),
                ('aware_of_cybersecurity', models.BooleanField(default=False, help_text='Is the student aware of cybersecurity risks?')),
                ('experienced_electronic_extortion', models.BooleanField(default=False, help_text='Has the student experienced electronic extortion?')),
            ],
            options={
                'verbose_name': 'Social Media and Technology',
                'verbose_name_plural': 'Social Media and Technology',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('student_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the student', unique=True, verbose_name='Student ID')),
                ('enrollment_date', models.DateField()),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=100)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField()),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='student_profiles/')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('mobile', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, help_text='Name of emergency contact', max_length=100, null=True)),
                ('emergency_contact', models.CharField(help_text='Emergency contact number', max_length=100)),
                ('guardian_relationship', models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Sibling', 'Sibling'), ('Other', 'Other')], max_length=100)),
                ('guardian_address', models.TextField(blank=True, null=True)),
                ('guardian_employment_status', models.CharField(choices=[('Employed', 'Employed'), ('Unemployed', 'Unemployed'), ('Retired', 'Retired')], default='Employed', max_length=100)),
                ('guardian_monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('guardian_education', models.CharField(choices=[('Illiterate', 'Illiterate'), ('Primary', 'Primary Education'), ('Secondary', 'Secondary Education'), ("Bachelor's", "Bachelor's Degree"), ("Master's", "Master's Degree"), ('PhD', 'PhD')], default='Illiterate', max_length=100)),
                ('grade_level', models.CharField(blank=True, choices=[('Grade 10', 'Grade 10'), ('Grade 11', 'Grade 11'), ('Grade 12', 'Grade 12')], max_length=100, null=True)),
                ('attendance_percentage', models.FloatField(default=0.0)),
                ('academic_performance', models.CharField(blank=True, choices=[('Excellent', 'Excellent'), ('Very Good', 'Very Good'), ('Good', 'Good'), ('Average', 'Average'), ('Needs Improvement', 'Needs Improvement')], max_length=100, null=True)),
                ('awards', models.TextField(blank=True, null=True)),
                ('seat_zone', models.CharField(choices=[('Front', 'Front'), ('Middle', 'Middle'), ('Back', 'Back'), ('Side', 'Side')], default='Middle', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='StudentPerformanceTrend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('Fall', 'Fall Semester'), ('Spring', 'Spring Semester'), ('Summer', 'Summer Semester')], max_length=100)),
                ('average_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
            ],
            options={
                'verbose_name': 'Student Performance Trend',
                'verbose_name_plural': 'Student Performance Trends',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the subject', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Subject description', null=True)),
                ('credit_hours', models.PositiveSmallIntegerField(default=1, help_text='Number of credit hours for the subject')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
            },
        ),
    ]
